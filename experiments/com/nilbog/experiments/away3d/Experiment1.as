package com.nilbog.experiments.away3d {    import away3d.cameras.HoverCamera3D;    import away3d.containers.Scene3D;    import away3d.containers.View3D;    import away3d.core.render.Renderer;    import away3d.core.utils.Cast;    import away3d.materials.BitmapMaterial;    import away3d.primitives.Sphere;    import flash.display.Sprite;    import flash.events.Event;    import flash.events.MouseEvent;    import flash.filters.GlowFilter;    /**     * @author jmhnilbog     */    public class Experiment1 extends Sprite     {        //navigation variables        private var move:Boolean = false;        private var lastPanAngle:Number;        private var lastTiltAngle:Number;        private var lastMouseX:Number;        private var lastMouseY:Number;        private var skies:Sphere;                private var view:View3D;        private var scene:Scene3D;        private var camera:HoverCamera3D;        public function Experiment1()        {        	scene = new Scene3D();        	camera = new HoverCamera3D();        	camera.zoom = 2;        	camera.focus = 200;        	camera.distance = 400;            camera.targetpanangle = camera.panangle = -180;            camera.targettiltangle = camera.tiltangle = 15;            camera.yfactor = 1;                        view = new View3D();            view.scene = scene;            view.camera = camera;            view.renderer = Renderer.CORRECT_Z_ORDER;           	view.x = 230;            view.y = 200;            addChild( view );			            var globe:Sphere = new Sphere();            globe.radius= 150;            globe.segmentsH = 18;            globe.segmentsW = 26;            globe.material = new BitmapMaterial( Cast.bitmap( "earthmap1k.jpg" ));            scene.addChild( globe );                        skies = new Sphere();            skies.material = new BitmapMaterial( Cast.bitmap("earthcloudmap.png"));            skies.radius = 153;            skies.segmentsH = 18;            skies.segmentsW = 26;			scene.addChild( skies );			//			var heavens:Sphere = new Sphere();//			heavens.material = new BitmapMaterial( Cast.bitmap("star_map_small.jpg"));//			heavens.radius = 1200; //			heavens.x = 0;//			heavens.y = 0;//			heavens.segmentsH = 9;//			heavens.segmentsW = 9;//	        scene.addChild( heavens );                        view.render();        }			//            addEventListener( Event.ENTER_FRAME, onEnterFrame );//            stage.addEventListener( MouseEvent.MOUSE_DOWN, MouseDown );//            stage.addEventListener( MouseEvent.MOUSE_UP, MouseUp );//			//            // Step 5: apply the earth texture//            //			//            // Step 6: Add skies for increased reality//            //			//			//            // Step 7: Add stars//            //			//			//            // Step 8: add the sun//            var sun:Sphere = new Sphere( {material:"sunmap.jpg", radius:50, x:150, y:100, z:600, segmentsH:6, segmentsW:6} );//            view.scene.addChild( sun );//			//            // Step 9: optimize performance by reducing faces//            globe.material = new BitmapMaterial( Cast.bitmap( "earthmap1k.png" ) );//			//			//            // Step 10: add nightmode//            var newMaterial:BitmapMaterial = new BitmapMaterial( Cast.bitmap( "earthmap1k_night_day.png" ) );//            globe.material = newMaterial;//			//			//            // Step 11: add some atmoshphere//            var myFilter1:Array = new Array( );//            myFilter1.push( new GlowFilter( 0xFFFFAA, 1, 25, 25, 3, 1, false, false ) );//            sun.ownCanvas = true;//            sun.filters = myFilter1;//			//            var myFilter2:Array = new Array( );//            myFilter2.push( new GlowFilter( 0xFFFFFF, 0.4, 15, 15, 2, 1, false, false ) );//            globe.ownCanvas = true;//            globe.filters = myFilter2;	//		}////        // Step 4: rotate it using the HoverCam//        private function onEnterFrame(e:Event):void//        {//            // rerender viewport//            var cameraSpeed:Number = 0.3; // Approximately same speed as mouse movement.//            if (move) {//				camera.targetpanangle = cameraSpeed*(stage.mouseX - lastMouseX) + lastPanAngle;//				camera.targettiltangle = cameraSpeed*(stage.mouseY - lastMouseY) + lastTiltAngle;//			}//			camera.hover();  //			view.render();//			if(skies)//				skies.rotationY += .015;//        }//		//		private function MouseDown(event:MouseEvent):void//		{//			lastPanAngle = camera.targetpanangle;//			lastTiltAngle = camera.targettiltangle;//			lastMouseX = stage.mouseX;//			lastMouseY = stage.mouseY;//			move = true;//		}//		//		private function MouseUp(event:MouseEvent):void//		{//			move = false;//		}    }}