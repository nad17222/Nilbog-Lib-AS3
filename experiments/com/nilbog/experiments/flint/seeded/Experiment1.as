package com.nilbog.experiments.flint.seeded {	import com.nilbog.random.RNG;	import com.nilbog.random.implementations.MersenneTwister;	import org.flintparticles.common.counters.Steady;	import org.flintparticles.common.displayObjects.Star;	import org.flintparticles.common.initializers.ColorInit;	import org.flintparticles.common.initializers.SharedImage;	import org.flintparticles.twoD.actions.Move;	import org.flintparticles.twoD.emitters.Emitter2D;	import org.flintparticles.twoD.initializers.Velocity;	import org.flintparticles.twoD.renderers.BitmapRenderer;	import org.flintparticles.twoD.zones.DiscZone;	import flash.display.BlendMode;	import flash.display.Sprite;	import flash.filters.BlurFilter;	import flash.filters.ColorMatrixFilter;	import flash.geom.Point;	import flash.geom.Rectangle;	/**	 * @author jmhnilbog     */    public class Experiment1 extends Sprite    {    	        public function Experiment1()        {        	RNG.initialize( new MersenneTwister() );        	RNG.seed(2);	        	        	var emitter:Emitter2D = new Emitter2D();			emitter.counter = new Steady( 10 );						emitter.addInitializer( new SharedImage( new Star( 8 ) ) );			emitter.addInitializer( new ColorInit( 0xFFFFCC00, 0xFFFFCC00 ) );			emitter.addInitializer( new Velocity( new DiscZone( new Point( 0, 0 ), 350, 200 ) ) );			emitter.addAction( new Move() );        	var renderer:BitmapRenderer = new BitmapRenderer(new Rectangle(0, 0, stage.stageWidth, stage.stageHeight));			renderer.addEmitter(emitter);			renderer.addFilter( new BlurFilter( 2, 2, 1 ) );			renderer.addFilter( new ColorMatrixFilter( [ 1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0 ] ) );			renderer.blendMode = BlendMode.ADD;			addChild( renderer );						emitter.x = stage.stageWidth/2;			emitter.y = stage.stageHeight/2;			emitter.start();        }    }}