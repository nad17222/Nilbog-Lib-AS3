package com.nilbog.util {	import com.nilbog.dbc.precondition;	import flash.display.DisplayObject;	import flash.display.LoaderInfo;	import flash.display.Stage;	/**	 * @author markhawley	 * 	 * Reads flash vars and allows setting of defaults. Usually used as a 	 * singleton via FlashVars.instance, but may be instantiated. 	 */	public dynamic class FlashVars 	{		public static const ARRAY_DELIMITER:String = "|";				public static var instance:FlashVars;				public function FlashVars( displayObjectOnStage:DisplayObject, defaults:* = null)		{			precondition(null != displayObjectOnStage);						for (var k:String in defaults)			{				this[k] = defaults[k];			}						// overwrite defaults with actual flash vars			if (displayObjectOnStage.root != null)			{				var actualFlashVars:Object = LoaderInfo( displayObjectOnStage.root.loaderInfo ).parameters;				for (var aKey:String in actualFlashVars)				{					this[aKey] = actualFlashVars[aKey].split(ARRAY_DELIMITER);				}			}			}				public static function initialize( displayObjectOnStage:DisplayObject, defaults:* = null) :FlashVars		{			if (null == instance)			{				instance = new FlashVars(displayObjectOnStage, defaults);			}			else if (null != defaults)			{				instance.refreshDefaults( defaults );			}			return instance;		}				/**		 * Sets defaults, not overwriting previously set values.		 * 		 * @param	defaults	Object, name/value pairs		 */		public function refreshDefaults( defaults:Object ) :void		{			for (var dKey:String in defaults)			{				// don't overwrite anything				if (this[dKey] == null)				{					this[dKey] = defaults[dKey].split(ARRAY_DELIMITER);				}			}		}				/**		 * Provides simple string dump.		 * 		 * @param	String		 */		public function toString() :String		{			var s:String = "[object FlashVars { ";			for (var k:String in this)			{				s += k + ":" + this[k] + " ";			}			return s + " }]";		}	}}