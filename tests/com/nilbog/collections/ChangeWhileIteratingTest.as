package com.nilbog.collections{    import asunit.framework.TestCase;    import com.nilbog.collections.List;    /**	 * @author mark hawley	 */	public class ChangeWhileIteratingTest extends TestCase 	{		private var list:List;		private var iterator:IListIterator;				public function ChangeWhileIteratingTest(testMethod:String = null)		{			super(testMethod);		}				protected override function setUp() :void		{			list = new List();			list.add("A");			list.add("B");			list.add("C");			iterator = list.getListIterator();		}		protected override function tearDown() :void		{			iterator = null;			list = null;		}				public function testChangeWhileIterating() :void		{			// our iterator is already created						var originalSize:Number = list.size();			list.add("X");			var newSize:Number = list.size();						assertTrue("List was added to.", newSize == (originalSize+1));						var error:Boolean = false;						try			{				var item:* = iterator.next();						}			catch( e:Error )			{				error = true;			}			finally			{				assertTrue("Iterator was very unhappy with the collection.", error);			}						iterator.reset();						assertTrue("After a reset, the iterator was happy once more.", iterator.next() == "A");		}	}}